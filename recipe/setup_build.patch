diff --git a/orig/setup_build.py b/mod/setup_build.py
index 3eba78e..f002279 100644
--- a/orig/setup_build.py
+++ b/mod/setup_build.py
@@ -126,19 +126,20 @@ def get_sundials_config_pxi(include_dirs, dist):
         info("Failed to find sundials index type, falling back to int64...")
 
     # Check for blas/lapack
-    if check_macro_def(
-        config_cmd,
-        "SUNDIALS_BLAS_LAPACK", headers=[SUNDIALS_CONFIG_H],
-        include_dirs=include_dirs
-    ):
-        has_lapack = True
-    else:
-        has_lapack = False
+    # if check_macro_def(
+    #     config_cmd,
+    #     "SUNDIALS_BLAS_LAPACK", headers=[SUNDIALS_CONFIG_H],
+    #     include_dirs=include_dirs
+    # ):
+    #     has_lapack = True
+    # else:
+
+    has_lapack = False
 
     cfg = dict(
-        float_type = SUNDIALS_FLOAT_TYPE,
-        index_size = SUNDIALS_INDEX_SIZE,
-        has_lapack = has_lapack,
+        float_type=SUNDIALS_FLOAT_TYPE,
+        index_size=SUNDIALS_INDEX_SIZE,
+        has_lapack=has_lapack,
     )
 
     return write_pxi(join(BASE_PATH, "sundials_config.pxi"), dict(
@@ -153,6 +154,7 @@ class build_ext(_build_ext):
         Custom distutils command which encapsulates api_gen pre-building,
         Cython building, and C compilation.
     """
+
     def _get_cython_ext(self):
         import numpy
         base_path = 'src/scikits_odes_sundials'
@@ -190,8 +192,10 @@ class build_ext(_build_ext):
             )
 
         elif SUNDIALS_INST_PREFIX is not None:
-            SUNDIALS_LIBRARY_DIRS.append(os.path.join(SUNDIALS_INST_PREFIX, "lib"))
-            SUNDIALS_INCLUDE_DIRS.append(os.path.join(SUNDIALS_INST_PREFIX, "include"))
+            SUNDIALS_LIBRARY_DIRS.append(
+                os.path.join(SUNDIALS_INST_PREFIX, "lib"))
+            SUNDIALS_INCLUDE_DIRS.append(
+                os.path.join(SUNDIALS_INST_PREFIX, "include"))
             info("SUNDIALS installation path set to `{}` via $SUNDIALS_INST.".format(
                 SUNDIALS_INST_PREFIX))
         else:
@@ -218,7 +222,6 @@ class build_ext(_build_ext):
                     for lib in ida_pkgconf.get('include_dirs', []):
                         IDA_LIBRARIES.append(str(lib))
 
-
                     cvodes_pkgconf = pkgconfig.parse(PKGCONFIG_CVODES)
                     for d in cvodes_pkgconf.get('library_dirs', []):
                         CVODES_LIBRARY_DIRS.append(str(d))
@@ -302,42 +305,41 @@ class build_ext(_build_ext):
         return [
             Extension(
                 base_module + '.' + "common_defs",
-                sources = [join(base_path, 'common_defs.pyx')],
+                sources=[join(base_path, 'common_defs.pyx')],
                 include_dirs=SUNDIALS_INCLUDE_DIRS,
                 library_dirs=SUNDIALS_LIBRARY_DIRS,
                 libraries=SUNDIALS_LIBRARIES,
             ),
             Extension(
                 base_module + '.' + "cvode",
-                sources = [join(base_path, 'cvode.pyx')],
+                sources=[join(base_path, 'cvode.pyx')],
                 include_dirs=CVODE_INCLUDE_DIRS,
                 library_dirs=CVODE_LIBRARY_DIRS,
                 libraries=CVODE_LIBRARIES,
             ),
             Extension(
                 base_module + '.' + "ida",
-                sources = [join(base_path, 'ida.pyx')],
+                sources=[join(base_path, 'ida.pyx')],
                 include_dirs=IDA_INCLUDE_DIRS,
                 library_dirs=IDA_LIBRARY_DIRS,
                 libraries=IDA_LIBRARIES,
             ),
             Extension(
                 base_module + '.' + "cvodes",
-                sources = [join(base_path, 'cvodes.pyx')],
+                sources=[join(base_path, 'cvodes.pyx')],
                 include_dirs=CVODES_INCLUDE_DIRS,
                 library_dirs=CVODES_LIBRARY_DIRS,
                 libraries=CVODES_LIBRARIES,
             ),
             Extension(
                 base_module + '.' + "idas",
-                sources = [join(base_path, 'idas.pyx')],
+                sources=[join(base_path, 'idas.pyx')],
                 include_dirs=IDAS_INCLUDE_DIRS,
                 library_dirs=IDAS_LIBRARY_DIRS,
                 libraries=IDAS_LIBRARIES,
             ),
         ]
 
-
     def run(self):
         """ Distutils calls this method to run the command """
         from Cython.Build import cythonize
@@ -347,5 +349,4 @@ class build_ext(_build_ext):
                 'language_level': 3,
             },
         )
-        _build_ext.run(self) # actually do the build
-
+        _build_ext.run(self)  # actually do the build
